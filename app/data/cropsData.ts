import { CropType } from '@/types/farming';

/**
 * –î–∞–Ω–Ω—ã–µ –∫—É–ª—å—Ç—É—Ä –∏–∑ Excel —Ñ–∞–π–ª–∞ "–ö—É–ª—å—Ç—É—Ä—ã.xlsx"
 * –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–∑—è—Ç—ã –∏–∑ —Ä–µ–∞–ª—å–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã –≤—ã—Ä–∞—â–∏–≤–∞–Ω–∏—è
 */

export const crops: CropType[] = [
  {
    id: 'arugula',
    name: '–†—É–∫–∫–æ–ª–∞',
    icon: 'üåø',
    image: '/images/crops/arugula.svg',
    color: '#16A34A',
    climateRequirements: {
      temperature: { min: 20, max: 22 },
      humidity: { min: 70, max: 75 },
      co2: { min: 800, max: 1200 },
      lighting: { min: 200, max: 400 },
      ph: { min: 5.8, max: 6.5 },
      ec: { min: 900, max: 1400 }
    },
    growthStages: [
      {
        id: 'germination',
        name: '–ü—Ä–æ—Ä–æ—Å—Ç–∫–∏',
        duration: 4, // 3-5 –¥–Ω–µ–π (—Å—Ä–µ–¥–Ω–µ–µ 4)
        description: '–ü—Ä–æ—Ä–∞—Å—Ç–∞–Ω–∏–µ —Å–µ–º—è–Ω',
        icon: 'üå±',
        parameters: {
          ph: { min: 5.8, max: 6.2 },
          ec: { min: 900, max: 1200 },
          temperature: { min: 20, max: 22 },
          humidity: { min: 70, max: 75 }
        }
      },
      {
        id: 'vegetation',
        name: '–í–µ–≥–µ—Ç–∞—Ü–∏—è',
        duration: 12, // 10-15 –¥–Ω–µ–π (—Å—Ä–µ–¥–Ω–µ–µ 12)
        description: '–ê–∫—Ç–∏–≤–Ω—ã–π —Ä–æ—Å—Ç –ª–∏—Å—Ç—å–µ–≤',
        icon: 'üåø',
        parameters: {
          ph: { min: 6.0, max: 6.5 },
          ec: { min: 900, max: 1200 },
          temperature: { min: 20, max: 22 },
          humidity: { min: 70, max: 75 }
        }
      },
      {
        id: 'maturation',
        name: '–°–æ–∑—Ä–µ–≤–∞–Ω–∏–µ',
        duration: 8, // 7-10 –¥–Ω–µ–π (—Å—Ä–µ–¥–Ω–µ–µ 8)
        description: '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Å–±–æ—Ä—É —É—Ä–æ–∂–∞—è',
        icon: 'üçÉ',
        parameters: {
          ph: { min: 6.0, max: 6.5 },
          ec: { min: 1300, max: 1400 },
          temperature: { min: 20, max: 22 },
          humidity: { min: 70, max: 75 }
        }
      }
    ],
    totalGrowthDays: 24 // 4 + 12 + 8
  },
  {
    id: 'lollo_rossa',
    name: '–õ–æ–ª–ª–æ –†–æ—Å—Å–∞',
    icon: 'ü•¨',
    image: '/images/crops/lollo_rossa.svg',
    color: '#DC2626',
    climateRequirements: {
      temperature: { min: 20, max: 22 },
      humidity: { min: 70, max: 75 },
      co2: { min: 800, max: 1200 },
      lighting: { min: 200, max: 400 },
      ph: { min: 5.8, max: 6.3 },
      ec: { min: 900, max: 1400 }
    },
    growthStages: [
      {
        id: 'germination',
        name: '–ü—Ä–æ—Ä–æ—Å—Ç–∫–∏',
        duration: 5, // 4-6 –¥–Ω–µ–π
        description: '–ü—Ä–æ—Ä–∞—Å—Ç–∞–Ω–∏–µ —Å–µ–º—è–Ω',
        icon: 'üå±',
        parameters: {
          ph: { min: 5.8, max: 6.2 },
          ec: { min: 900, max: 1200 },
          temperature: { min: 20, max: 22 },
          humidity: { min: 70, max: 75 }
        }
      },
      {
        id: 'vegetation',
        name: '–í–µ–≥–µ—Ç–∞—Ü–∏—è',
        duration: 17, // 15-20 –¥–Ω–µ–π
        description: '–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–∏—Å—Ç—å–µ–≤',
        icon: 'üåø',
        parameters: {
          ph: { min: 5.8, max: 6.3 },
          ec: { min: 900, max: 1400 },
          temperature: { min: 20, max: 22 },
          humidity: { min: 70, max: 75 }
        }
      },
      {
        id: 'maturation',
        name: '–°–æ–∑—Ä–µ–≤–∞–Ω–∏–µ',
        duration: 8, // 7-10 –¥–Ω–µ–π
        description: '–û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–µ —Å–æ–∑—Ä–µ–≤–∞–Ω–∏–µ',
        icon: 'üçÉ',
        parameters: {
          ph: { min: 6.0, max: 6.3 },
          ec: { min: 1300, max: 1400 },
          temperature: { min: 20, max: 22 },
          humidity: { min: 70, max: 75 }
        }
      }
    ],
    totalGrowthDays: 30 // 5 + 17 + 8
  },
  {
    id: 'romano',
    name: '–†–æ–º–∞–Ω–æ',
    icon: 'ü•¨',
    image: '/images/crops/romano.svg',
    color: '#059669',
    climateRequirements: {
      temperature: { min: 20, max: 22 },
      humidity: { min: 70, max: 75 },
      co2: { min: 800, max: 1200 },
      lighting: { min: 200, max: 400 },
      ph: { min: 5.8, max: 6.5 },
      ec: { min: 900, max: 1400 }
    },
    growthStages: [
      {
        id: 'germination',
        name: '–ü—Ä–æ—Ä–æ—Å—Ç–∫–∏',
        duration: 6, // 5-7 –¥–Ω–µ–π
        description: '–ü—Ä–æ—Ä–∞—Å—Ç–∞–Ω–∏–µ —Å–µ–º—è–Ω',
        icon: 'üå±',
        parameters: {
          ph: { min: 5.8, max: 6.3 },
          ec: { min: 900, max: 1200 },
          temperature: { min: 20, max: 22 },
          humidity: { min: 70, max: 75 }
        }
      },
      {
        id: 'vegetation',
        name: '–í–µ–≥–µ—Ç–∞—Ü–∏—è',
        duration: 22, // 20-25 –¥–Ω–µ–π
        description: '–ê–∫—Ç–∏–≤–Ω—ã–π —Ä–æ—Å—Ç',
        icon: 'üåø',
        parameters: {
          ph: { min: 5.8, max: 6.4 },
          ec: { min: 900, max: 1400 },
          temperature: { min: 20, max: 22 },
          humidity: { min: 70, max: 75 }
        }
      },
      {
        id: 'maturation',
        name: '–°–æ–∑—Ä–µ–≤–∞–Ω–∏–µ',
        duration: 12, // 10-14 –¥–Ω–µ–π
        description: '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Å–±–æ—Ä—É',
        icon: 'üçÉ',
        parameters: {
          ph: { min: 6.0, max: 6.5 },
          ec: { min: 1300, max: 1400 },
          temperature: { min: 20, max: 22 },
          humidity: { min: 70, max: 75 }
        }
      }
    ],
    totalGrowthDays: 40 // 6 + 22 + 12
  },
  {
    id: 'endive',
    name: '–≠–Ω–¥–∏–≤–∏–π',
    icon: 'ü•¨',
    image: '/images/crops/endive.svg',
    color: '#10B981',
    climateRequirements: {
      temperature: { min: 20, max: 22 },
      humidity: { min: 70, max: 75 },
      co2: { min: 800, max: 1200 },
      lighting: { min: 200, max: 400 },
      ph: { min: 5.8, max: 6.5 },
      ec: { min: 900, max: 1400 }
    },
    growthStages: [
      {
        id: 'germination',
        name: '–ü—Ä–æ—Ä–æ—Å—Ç–∫–∏',
        duration: 5, // 4-6 –¥–Ω–µ–π
        description: '–ü—Ä–æ—Ä–∞—Å—Ç–∞–Ω–∏–µ —Å–µ–º—è–Ω',
        icon: 'üå±',
        parameters: {
          ph: { min: 5.8, max: 6.3 },
          ec: { min: 900, max: 1200 },
          temperature: { min: 20, max: 22 },
          humidity: { min: 70, max: 75 }
        }
      },
      {
        id: 'vegetation',
        name: '–í–µ–≥–µ—Ç–∞—Ü–∏—è',
        duration: 17, // 15-20 –¥–Ω–µ–π
        description: '–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–∏—Å—Ç—å–µ–≤',
        icon: 'üåø',
        parameters: {
          ph: { min: 5.9, max: 6.4 },
          ec: { min: 900, max: 1400 },
          temperature: { min: 20, max: 22 },
          humidity: { min: 70, max: 75 }
        }
      },
      {
        id: 'maturation',
        name: '–°–æ–∑—Ä–µ–≤–∞–Ω–∏–µ',
        duration: 12, // 10-14 –¥–Ω–µ–π
        description: '–û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–µ —Å–æ–∑—Ä–µ–≤–∞–Ω–∏–µ',
        icon: 'üçÉ',
        parameters: {
          ph: { min: 6.0, max: 6.5 },
          ec: { min: 1300, max: 1400 },
          temperature: { min: 20, max: 22 },
          humidity: { min: 70, max: 75 }
        }
      }
    ],
    totalGrowthDays: 34 // 5 + 17 + 12
  },
  {
    id: 'basil',
    name: '–ë–∞–∑–∏–ª–∏–∫',
    icon: 'üåø',
    image: '/images/crops/basil.svg',
    color: '#7C3AED',
    climateRequirements: {
      temperature: { min: 25, max: 30 }, // –ù–µ—Å–æ–≤–º–µ—Å—Ç–∏–º–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å –¥—Ä—É–≥–∏–º–∏
      humidity: { min: 50, max: 60 }, // –ù–µ—Å–æ–≤–º–µ—Å—Ç–∏–º–∞—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å
      co2: { min: 1000, max: 1500 },
      lighting: { min: 300, max: 500 },
      ph: { min: 6.5, max: 7.5 }, // –ù–µ—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π pH
      ec: { min: 1500, max: 2000 } // –ù–µ—Å–æ–≤–º–µ—Å—Ç–∏–º–∞—è EC
    },
    growthStages: [
      {
        id: 'germination',
        name: '–ü—Ä–æ—Ä–æ—Å—Ç–∫–∏',
        duration: 7, // 5-10 –¥–Ω–µ–π
        description: '–ü—Ä–æ—Ä–∞—Å—Ç–∞–Ω–∏–µ —Å–µ–º—è–Ω',
        icon: 'üå±',
        parameters: {
          ph: { min: 6.5, max: 7.0 },
          ec: { min: 1500, max: 1700 },
          temperature: { min: 25, max: 30 },
          humidity: { min: 50, max: 60 }
        }
      },
      {
        id: 'vegetation',
        name: '–í–µ–≥–µ—Ç–∞—Ü–∏—è',
        duration: 21, // 20-25 –¥–Ω–µ–π
        description: '–ê–∫—Ç–∏–≤–Ω—ã–π —Ä–æ—Å—Ç –ª–∏—Å—Ç—å–µ–≤',
        icon: 'üåø',
        parameters: {
          ph: { min: 6.5, max: 7.5 },
          ec: { min: 1500, max: 1800 },
          temperature: { min: 25, max: 30 },
          humidity: { min: 50, max: 60 }
        }
      },
      {
        id: 'maturation',
        name: '–°–æ–∑—Ä–µ–≤–∞–Ω–∏–µ',
        duration: 14, // 12-16 –¥–Ω–µ–π
        description: '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Å–±–æ—Ä—É —É—Ä–æ–∂–∞—è',
        icon: 'üçÉ',
        parameters: {
          ph: { min: 6.8, max: 7.5 },
          ec: { min: 1800, max: 2000 },
          temperature: { min: 25, max: 30 },
          humidity: { min: 50, max: 60 }
        }
      }
    ],
    totalGrowthDays: 42 // 7 + 21 + 14
  }
];

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –¥–≤—É—Ö –∫—É–ª—å—Ç—É—Ä –ø–æ –∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º
 * –ö—É–ª—å—Ç—É—Ä—ã —Å–æ–≤–º–µ—Å—Ç–∏–º—ã –µ—Å–ª–∏ –µ—Å—Ç—å –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ –≤–æ –í–°–ï–• –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö
 */
export function checkCropCompatibility(
  crop1: CropType,
  crop2: CropType
): { compatible: boolean; reasons: string[] } {
  const reasons: string[] = [];

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
  const tempOverlap = Math.max(
    0,
    Math.min(crop1.climateRequirements.temperature.max, crop2.climateRequirements.temperature.max) -
      Math.max(crop1.climateRequirements.temperature.min, crop2.climateRequirements.temperature.min)
  );
  if (tempOverlap <= 0) {
    reasons.push(
      `–ù–µ—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã: ${crop1.name} (${crop1.climateRequirements.temperature.min}-${crop1.climateRequirements.temperature.max}¬∞C) –∏ ${crop2.name} (${crop2.climateRequirements.temperature.min}-${crop2.climateRequirements.temperature.max}¬∞C)`
    );
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ –≤–ª–∞–∂–Ω–æ—Å—Ç–∏
  const humidityOverlap = Math.max(
    0,
    Math.min(crop1.climateRequirements.humidity.max, crop2.climateRequirements.humidity.max) -
      Math.max(crop1.climateRequirements.humidity.min, crop2.climateRequirements.humidity.min)
  );
  if (humidityOverlap <= 0) {
    reasons.push(
      `–ù–µ—Å–æ–≤–º–µ—Å—Ç–∏–º–∞—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å: ${crop1.name} (${crop1.climateRequirements.humidity.min}-${crop1.climateRequirements.humidity.max}%) –∏ ${crop2.name} (${crop2.climateRequirements.humidity.min}-${crop2.climateRequirements.humidity.max}%)`
    );
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ pH
  const phOverlap = Math.max(
    0,
    Math.min(crop1.climateRequirements.ph.max, crop2.climateRequirements.ph.max) -
      Math.max(crop1.climateRequirements.ph.min, crop2.climateRequirements.ph.min)
  );
  if (phOverlap < 0.1) {
    reasons.push(
      `–ù–µ—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π pH: ${crop1.name} (${crop1.climateRequirements.ph.min}-${crop1.climateRequirements.ph.max}) –∏ ${crop2.name} (${crop2.climateRequirements.ph.min}-${crop2.climateRequirements.ph.max})`
    );
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ EC
  const ecOverlap = Math.max(
    0,
    Math.min(crop1.climateRequirements.ec.max, crop2.climateRequirements.ec.max) -
      Math.max(crop1.climateRequirements.ec.min, crop2.climateRequirements.ec.min)
  );
  if (ecOverlap < 50) {
    reasons.push(
      `–ù–µ—Å–æ–≤–º–µ—Å—Ç–∏–º–∞—è EC: ${crop1.name} (${crop1.climateRequirements.ec.min}-${crop1.climateRequirements.ec.max} ¬µS/—Å–º) –∏ ${crop2.name} (${crop2.climateRequirements.ec.min}-${crop2.climateRequirements.ec.max} ¬µS/—Å–º)`
    );
  }

  const compatible = reasons.length === 0;

  return { compatible, reasons };
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –∫—É–ª—å—Ç—É—Ä—ã, —Å–æ–≤–º–µ—Å—Ç–∏–º—ã–µ —Å —É–∫–∞–∑–∞–Ω–Ω–æ–π
 */
export function getCompatibleCrops(baseCropId: string): CropType[] {
  const baseCrop = crops.find((c) => c.id === baseCropId);
  if (!baseCrop) return [];

  return crops.filter((crop) => {
    if (crop.id === baseCropId) return true;
    const check = checkCropCompatibility(baseCrop, crop);
    return check.compatible;
  });
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –∫—É–ª—å—Ç—É—Ä—ã, –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–ª—è –ø–æ—Å–∞–¥–∫–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
 * –£—á–∏—Ç—ã–≤–∞–µ—Ç —É–∂–µ —Ä–∞—Å—Ç—É—â–∏–µ –∫—É–ª—å—Ç—É—Ä—ã
 */
export function getAvailableCropsForContainer(existingCropIds: string[]): {
  available: CropType[];
  blocked: { crop: CropType; reasons: string[] }[];
} {
  // –ï—Å–ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø—É—Å—Ç, –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ –∫—É–ª—å—Ç—É—Ä—ã
  if (existingCropIds.length === 0) {
    return {
      available: crops,
      blocked: []
    };
  }

  const existingCrops = crops.filter((c) => existingCropIds.includes(c.id));

  const available: CropType[] = [];
  const blocked: { crop: CropType; reasons: string[] }[] = [];

  crops.forEach((crop) => {
    // –ï—Å–ª–∏ –∫—É–ª—å—Ç—É—Ä–∞ —É–∂–µ —Ä–∞—Å—Ç–µ—Ç, –æ–Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–∞
    if (existingCropIds.includes(crop.id)) {
      available.push(crop);
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å–æ –í–°–ï–ú–ò —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ –∫—É–ª—å—Ç—É—Ä–∞–º–∏
    let compatible = true;
    const allReasons: string[] = [];

    for (const existingCrop of existingCrops) {
      const check = checkCropCompatibility(crop, existingCrop);
      if (!check.compatible) {
        compatible = false;
        allReasons.push(...check.reasons);
      }
    }

    if (compatible) {
      available.push(crop);
    } else {
      blocked.push({ crop, reasons: allReasons });
    }
  });

  return { available, blocked };
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –∫—É–ª—å—Ç—É—Ä—É –ø–æ ID
 */
export function getCropById(cropId: string): CropType | undefined {
  return crops.find((c) => c.id === cropId);
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â—É—é —Å—Ç–∞–¥–∏—é —Ä–æ—Å—Ç–∞ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –¥–Ω–µ–π
 */
export function getCurrentGrowthStage(
  crop: CropType,
  daysGrowing: number
): { stage: typeof crop.growthStages[0]; stageIndex: number; daysInStage: number; progress: number } | null {
  let accumulatedDays = 0;

  for (let i = 0; i < crop.growthStages.length; i++) {
    const stage = crop.growthStages[i];
    const stageEnd = accumulatedDays + stage.duration;

    if (daysGrowing < stageEnd) {
      const daysInStage = daysGrowing - accumulatedDays;
      const progress = (daysInStage / stage.duration) * 100;

      return {
        stage,
        stageIndex: i,
        daysInStage,
        progress
      };
    }

    accumulatedDays = stageEnd;
  }

  // –ï—Å–ª–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è —Ä–æ—Å—Ç–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç–∞–¥–∏—é
  const lastStage = crop.growthStages[crop.growthStages.length - 1];
  return {
    stage: lastStage,
    stageIndex: crop.growthStages.length - 1,
    daysInStage: lastStage.duration,
    progress: 100
  };
}