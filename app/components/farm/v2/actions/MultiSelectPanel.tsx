'use client';

import { Card } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Sprout, Trash2, X, MoreHorizontal } from 'lucide-react';
import { useState, useRef, useEffect } from 'react';
import { ContextMenu, ContextMenuItem } from './ContextMenu';

interface MultiSelectPanelProps {
  selectedCount: number;
  onPlant: () => void;
  onClear: () => void;
  onCancel: () => void;
  onHarvest?: () => void;
  onStopGrowing?: () => void;
  onCancelStop?: () => void;
}

export function MultiSelectPanel({
  selectedCount,
  onPlant,
  onClear,
  onCancel,
  onHarvest,
  onStopGrowing,
  onCancelStop
}: MultiSelectPanelProps) {
  const [showMoreMenu, setShowMoreMenu] = useState(false);
  const moreButtonRef = useRef<HTMLButtonElement>(null);

  const moreMenuItems: ContextMenuItem[] = [
    {
      id: 'harvest',
      label: '–°–æ–±—Ä–∞—Ç—å —É—Ä–æ–∂–∞–π',
      icon: <span>üåø</span>,
      disabled: !onHarvest,
      onClick: () => onHarvest?.()
    },
    {
      id: 'stop',
      label: '–ü—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å –≤—ã—Ä–∞—â–∏–≤–∞–Ω–∏–µ',
      icon: <span>‚õî</span>,
      disabled: !onStopGrowing,
      onClick: () => onStopGrowing?.()
    },
    {
      id: 'cancel_stop',
      label: '–û—Ç–º–µ–Ω–∏—Ç—å –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–∏–µ',
      icon: <span>‚Ü©Ô∏è</span>,
      disabled: !onCancelStop,
      onClick: () => onCancelStop?.()
    }
  ];

  const getMenuPosition = () => {
    if (!moreButtonRef.current) return { x: 0, y: 0 };
    const rect = moreButtonRef.current.getBoundingClientRect();
    const menuWidth = 200;
    const menuHeight = moreMenuItems.length * 44 + 16; // –≤—ã—Å–æ—Ç–∞ –ø—É–Ω–∫—Ç–æ–≤ + –æ—Ç—Å—Ç—É–ø—ã

    // –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º –º–µ–Ω—é —Å–ø—Ä–∞–≤–∞ –∏ –≤—ã—à–µ –∫–Ω–æ–ø–∫–∏
    let x = rect.right - menuWidth; // –í—ã—Ä–∞–≤–Ω–∏–≤–∞–µ–º –ø—Ä–∞–≤—ã–π –∫—Ä–∞–π –º–µ–Ω—é —Å –ø—Ä–∞–≤—ã–º –∫—Ä–∞–µ–º –∫–Ω–æ–ø–∫–∏
    let y = rect.top - menuHeight - 8; // –†–∞–∑–º–µ—â–∞–µ–º –≤—ã—à–µ –∫–Ω–æ–ø–∫–∏ —Å –æ—Ç—Å—Ç—É–ø–æ–º

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥—Ä–∞–Ω–∏—Ü—ã —ç–∫—Ä–∞–Ω–∞
    const windowWidth = window.innerWidth;
    const windowHeight = window.innerHeight;

    // –ï—Å–ª–∏ –º–µ–Ω—é –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ –ª–µ–≤—É—é –≥—Ä–∞–Ω–∏—Ü—É, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ —Å–ª–µ–≤–∞ –æ—Ç –∫–Ω–æ–ø–∫–∏
    if (x < 8) {
      x = rect.left;
    }

    // –ï—Å–ª–∏ –º–µ–Ω—é –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ –≤–µ—Ä—Ö–Ω—é—é –≥—Ä–∞–Ω–∏—Ü—É, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ —Å–Ω–∏–∑—É –æ—Ç –∫–Ω–æ–ø–∫–∏
    if (y < 8) {
      y = rect.bottom + 8;
    }

    return { x, y };
  };
  return (
    <Card className="fixed bottom-0 left-0 right-0 p-4 shadow-lg border-t-4 border-primary animate-slide-up z-50">
      <div className="flex items-center justify-between max-w-7xl mx-auto">
        <div className="flex items-center gap-4">
          <div className="text-sm font-medium">
            –í—ã–±—Ä–∞–Ω–æ —Å—Ç–æ–µ–∫: <span className="text-lg font-bold">{selectedCount}</span>
          </div>
        </div>

        <div className="flex items-center gap-2 ml-6">
          <Button onClick={onPlant} size="lg">
            <Sprout className="mr-2 h-5 w-5" />
            –ó–∞—Å–∞–¥–∏—Ç—å
          </Button>
          <Button onClick={onClear} variant="outline" size="lg">
            <Trash2 className="mr-2 h-5 w-5" />
            –û—á–∏—Å—Ç–∏—Ç—å
          </Button>
          <Button
            ref={moreButtonRef}
            onClick={() => setShowMoreMenu(!showMoreMenu)}
            variant="outline"
            size="icon"
          >
            <MoreHorizontal className="h-5 w-5" />
          </Button>
          <Button onClick={onCancel} variant="ghost" size="icon">
            <X className="h-5 w-5" />
          </Button>
        </div>
      </div>

      {showMoreMenu && (
        <ContextMenu
          items={moreMenuItems}
          position={getMenuPosition()}
          onClose={() => setShowMoreMenu(false)}
        />
      )}
    </Card>
  );
}