'use client'

import { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Separator } from "@/components/ui/separator";
import { Pause, MoreVertical, ChevronUp } from 'lucide-react';
import { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from "@/components/ui/dropdown-menu";

export default function ContainerParameters() {
  const [stagesExpanded, setStagesExpanded] = useState(true);
  const [selectedParameter, setSelectedParameter] = useState('temperature');
  const [selectedPeriod, setSelectedPeriod] = useState('7days');

  const growthStages = [
    { name: '–ü—Ä–æ—Ä–∞—â–∏–≤–∞–Ω–∏–µ', days: '7 –¥–Ω–µ–π', status: 'completed', color: 'bg-green-600' },
    { name: '–†–∞—Å—Å–∞–¥–∞', days: '14 –¥–Ω–µ–π', status: 'current', color: 'bg-blue-600' },
    { name: '–í–µ–≥–µ—Ç–∞—Ü–∏—è', days: '21 –¥–Ω–µ–π', status: 'upcoming', color: 'bg-gray-400' },
    { name: '–°–±–æ—Ä —É—Ä–æ–∂–∞—è', days: '30 –¥–Ω–µ–π', status: 'upcoming', color: 'bg-gray-400' }
  ];

  const parameters = [
    { 
      name: '–¢–µ–º-—Ä–∞ –≤–æ–∑–¥—É—Ö–∞', 
      value: '22.5¬∞C', 
      target: '–¶–µ–ª—å: 20-25¬∞C', 
      deviation: '-0.5¬∞C',
      deviationColor: 'text-green-600',
      selected: selectedParameter === 'temperature',
      borderColor: selectedParameter === 'temperature' ? 'border-blue-600 border-2' : '',
      icon: 'üå°Ô∏è'
    },
    { 
      name: '–í–ª–∞–∂–Ω–æ—Å—Ç—å', 
      value: '65%', 
      target: '–¶–µ–ª—å: 60-70%', 
      deviation: '+2%',
      deviationColor: 'text-green-600',
      selected: false,
      borderColor: '',
      icon: 'üíß'
    },
    { 
      name: '–£–≥–ª–µ–∫–∏—Å–ª—ã–π –≥–∞–∑', 
      value: '950 ppm', 
      target: '–¶–µ–ª—å: 800-1200ppm', 
      deviation: '-50 ppm',
      deviationColor: 'text-yellow-600',
      selected: false,
      borderColor: 'border-l-yellow-400 border-l-4',
      icon: 'ü´ß'
    },
    { 
      name: '–û—Å–≤–µ—â–µ–Ω–Ω–æ—Å—Ç—å', 
      value: '250 PPFD', 
      target: '–¶–µ–ª—å: 200-400PPFD', 
      deviation: '+10 PPFD',
      deviationColor: 'text-green-600',
      selected: false,
      borderColor: '',
      icon: 'üí°'
    },
    { 
      name: '–¢–µ–º-—Ä–∞ —Ä–∞—Å—Ç–≤–æ—Ä–∞', 
      value: '21¬∞C', 
      target: '–¶–µ–ª—å: 18-24¬∞C', 
      deviation: '-1¬∞C',
      deviationColor: 'text-green-600',
      selected: false,
      borderColor: '',
      icon: 'üå°Ô∏è'
    },
    { 
      name: '–†–∞—Å—Ç–≤–æ—Ä –≤ –±–∞–∫–µ', 
      value: '85%', 
      target: '–¶–µ–ª—å: >70%', 
      deviation: '-15%',
      deviationColor: 'text-red-600',
      selected: false,
      borderColor: 'border-l-red-500 border-l-4',
      icon: 'üß™'
    },
    { 
      name: '–ß–∏—Å—Ç–∞—è –≤–æ–¥–∞ –≤ –±–∞–∫–µ', 
      value: '92%', 
      target: '–¶–µ–ª—å: >80%', 
      deviation: '+12%',
      deviationColor: 'text-green-600',
      selected: false,
      borderColor: '',
      icon: 'üíß'
    },
    { 
      name: 'pH (–í—Ö–æ–¥)', 
      value: '6.2', 
      target: '–¶–µ–ª—å: 5.5-6.5', 
      deviation: '+0.2',
      deviationColor: 'text-green-600',
      selected: false,
      borderColor: '',
      icon: 'üß™'
    },
    { 
      name: 'pH (–í—ã—Ö–æ–¥)', 
      value: '6.0', 
      target: '–¶–µ–ª—å: 5.5-6.5', 
      deviation: '0',
      deviationColor: 'text-green-600',
      selected: false,
      borderColor: '',
      icon: 'üß™'
    },
    { 
      name: 'EC/TDS (–í—Ö–æ–¥)', 
      value: '1.8', 
      target: '–¶–µ–ª—å: 1.2-2.0', 
      deviation: '+0.3',
      deviationColor: 'text-green-600',
      selected: false,
      borderColor: '',
      icon: '‚ö°'
    },
    { 
      name: 'EC/TDS (–í—ã—Ö–æ–¥)', 
      value: '1.5', 
      target: '–¶–µ–ª—å: 1.0-1.8', 
      deviation: '+0.2',
      deviationColor: 'text-green-600',
      selected: false,
      borderColor: '',
      icon: '‚ö°'
    },
    { 
      name: 'VPD', 
      value: '0.8', 
      target: '–¶–µ–ª—å: 0.6-1.0', 
      deviation: '+0.1',
      deviationColor: 'text-green-600',
      selected: false,
      borderColor: '',
      icon: 'üåø'
    }
  ];

  return (
    <div className="space-y-6">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏ */}
      <Card>
        <CardContent className="flex items-center justify-between p-6">
          <div className="space-y-1">
            <h2 className="text-xl font-semibold text-foreground">–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä ‚Ññ 41-i2f</h2>
            <p className="text-sm text-muted-foreground">–†–µ–∂–∏–º: –ë–∞–∑–∏–ª–∏–∫</p>
          </div>
          <div className="flex items-center gap-2">
            <Button variant="outline" className="flex items-center gap-2">
              –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å
              <Pause className="h-4 w-4" />
            </Button>
            <DropdownMenu>
              <DropdownMenuTrigger asChild>
                <Button variant="outline" size="icon">
                  <MoreVertical className="h-4 w-4" />
                </Button>
              </DropdownMenuTrigger>
              <DropdownMenuContent align="end">
                <DropdownMenuItem>–ò–∑–º–µ–Ω–∏—Ç—å —Ä–µ–∂–∏–º</DropdownMenuItem>
                <DropdownMenuItem>–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö</DropdownMenuItem>
                <DropdownMenuItem>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</DropdownMenuItem>
              </DropdownMenuContent>
            </DropdownMenu>
          </div>
        </CardContent>
      </Card>

      {/* –°—Ç–∞–¥–∏–∏ —Ä–æ—Å—Ç–∞ */}
      <Card>
        <CardContent className="p-6">
          <div className="flex items-center justify-between mb-6">
            <div>
              <h3 className="text-lg font-semibold text-foreground">–°—Ç–∞–¥–∏–∏ —Ä–æ—Å—Ç–∞</h3>
              <p className="text-sm text-muted-foreground">–î–µ–Ω—å 8 –∏–∑ 72. –¢–µ–∫—É—â–∞—è —Å—Ç–∞–¥–∏—è: –†–∞—Å—Å–∞–¥–∞ (2 –∏–∑ 4)</p>
            </div>
            <Button 
              variant="ghost" 
              size="sm" 
              onClick={() => setStagesExpanded(!stagesExpanded)}
              className="text-muted-foreground"
            >
              {stagesExpanded ? '–°–≤–µ—Ä–Ω—É—Ç—å' : '–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å'}
              <ChevronUp className={`ml-2 h-4 w-4 transition-transform ${!stagesExpanded ? 'rotate-180' : ''}`} />
            </Button>
          </div>
          
          {stagesExpanded && (
            <div className="flex items-center justify-between">
              {growthStages.map((stage, index) => (
                <div key={stage.name} className="flex items-center">
                  <div className="flex flex-col items-center">
                    <div className={`
                      w-5 h-5 rounded-full flex items-center justify-center text-xs font-medium text-white
                      ${stage.status === 'completed' ? 'bg-green-600' : 
                        stage.status === 'current' ? 'bg-blue-600' : 'bg-gray-400'}
                    `}>
                      {stage.status === 'completed' ? '‚úì' : index + 1}
                    </div>
                    <div className="mt-2 text-center">
                      <p className={`text-sm font-medium ${
                        stage.status === 'completed' ? 'text-green-600' : 
                        stage.status === 'current' ? 'text-blue-600' : 'text-gray-600'
                      }`}>
                        {stage.name}
                      </p>
                      <p className={`text-xs ${
                        stage.status === 'completed' ? 'text-green-500' : 
                        stage.status === 'current' ? 'text-blue-500' : 'text-gray-400'
                      }`}>
                        {stage.days}
                      </p>
                    </div>
                  </div>
                  {index < growthStages.length - 1 && (
                    <div className={`
                      flex-1 h-0.5 mx-4 min-w-[100px]
                      ${stage.status === 'completed' ? 'bg-green-600' : 'bg-gray-300'}
                    `} />
                  )}
                </div>
              ))}
            </div>
          )}
        </CardContent>
      </Card>

      {/* –ü–∞—Ä–∞–º–µ—Ç—Ä—ã */}
      <div className="grid grid-cols-4 gap-4">
        {parameters.map((param) => (
          <Card 
            key={param.name}
            className={`cursor-pointer transition-all hover:shadow-md ${param.borderColor}`}
            onClick={() => setSelectedParameter(param.name === '–¢–µ–º-—Ä–∞ –≤–æ–∑–¥—É—Ö–∞' ? 'temperature' : param.name)}
          >
            <CardContent className="p-4">
              <div className="flex items-center gap-2 mb-2">
                <span className="text-lg">{param.icon}</span>
                <p className="text-sm text-muted-foreground">{param.name}</p>
              </div>
              <div className="text-right space-y-1">
                <p className="text-lg font-bold text-foreground">{param.value}</p>
                <p className="text-xs text-muted-foreground">{param.target}</p>
                <p className={`text-xs ${param.deviationColor}`}>{param.deviation}</p>
              </div>
              <div className="mt-2 flex gap-0.5">
                {Array.from({ length: 10 }).map((_, i) => (
                  <div key={i} className="flex-1 bg-gray-200 h-6" style={{ height: `${Math.random() * 24 + 8}px` }} />
                ))}
              </div>
            </CardContent>
          </Card>
        ))}
      </div>

      {/* –ì—Ä–∞—Ñ–∏–∫ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã */}
      <Card>
        <CardContent className="p-6">
          <div className="flex items-center justify-between mb-6">
            <h3 className="text-lg font-semibold text-foreground">–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞</h3>
            <div className="flex bg-card border rounded-md">
              {['1 —á–∞—Å', '24 —á–∞—Å–∞', '7 –¥–Ω–µ–π'].map((period, index) => (
                <Button
                  key={period}
                  variant={period === '7 –¥–Ω–µ–π' ? 'default' : 'ghost'}
                  size="sm"
                  className={`rounded-none ${index === 0 ? 'rounded-l-md' : index === 2 ? 'rounded-r-md' : ''}`}
                  onClick={() => setSelectedPeriod(period)}
                >
                  {period}
                </Button>
              ))}
            </div>
          </div>
          
          <div className="h-64 bg-gradient-to-b from-blue-50 to-white rounded-lg p-4 relative">
            {/* Y-axis labels */}
            <div className="absolute left-0 top-0 h-full flex flex-col justify-between text-sm text-muted-foreground py-4">
              <span>25</span>
              <span>24</span>
              <span>23</span>
              <span>22</span>
              <span>21</span>
            </div>
            
            {/* Chart area with mock line */}
            <div className="ml-12 h-full relative">
              <svg className="w-full h-full" viewBox="0 0 800 200">
                <path
                  d="M0,120 Q100,100 200,110 T400,80 T600,90 T800,110"
                  stroke="rgb(28, 100, 242)"
                  strokeWidth="3"
                  fill="none"
                />
                <defs>
                  <linearGradient id="chartGradient" x1="0%" y1="0%" x2="0%" y2="100%">
                    <stop offset="0%" stopColor="rgb(28, 100, 242)" stopOpacity="0.3"/>
                    <stop offset="100%" stopColor="rgb(28, 100, 242)" stopOpacity="0"/>
                  </linearGradient>
                </defs>
                <path
                  d="M0,120 Q100,100 200,110 T400,80 T600,90 T800,110 L800,200 L0,200 Z"
                  fill="url(#chartGradient)"
                />
              </svg>
            </div>
            
            {/* X-axis labels */}
            <div className="flex justify-between text-sm text-muted-foreground mt-2 ml-12">
              <span>08 –∞–≤–≥—É—Å—Ç–∞</span>
              <span>09 –∞–≤–≥—É—Å—Ç–∞</span>
              <span>10 –∞–≤–≥—É—Å—Ç–∞</span>
              <span>11 –∞–≤–≥—É—Å—Ç–∞</span>
              <span>12 –∞–≤–≥—É—Å—Ç–∞</span>
              <span>13 –∞–≤–≥—É—Å—Ç–∞</span>
              <span>14 –∞–≤–≥—É—Å—Ç–∞</span>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  );
}